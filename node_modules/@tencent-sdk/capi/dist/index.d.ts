export { tencentSign, tencentSignV1 } from './utils';
export * from './factory';
export interface CapiOptions {
    isPascalCase?: boolean;
    isV3?: boolean;
    debug?: boolean;
    host?: string;
    baseHost?: string;
    path?: string;
    method?: string;
    protocol?: string;
    timeout?: number;
    serviceType: string;
    version?: string;
    region: string;
    secretId: string;
    secretKey: string;
    token?: string;
    signatureMethod?: string;
    requestClient?: string;
}
export interface RequestData {
    action: string;
    requestClient?: string;
    version?: string;
    [propName: string]: any;
}
export interface RequestOptions {
    isV3?: boolean;
    debug?: boolean;
    host?: string;
    baseHost?: string;
    path?: string;
    method?: string;
    protocol?: string;
    timeout?: number;
    requestClient?: string;
}
export interface CapiInstance {
    request: (data: RequestData, opts?: RequestOptions, isV3?: boolean) => Promise<any>;
}
export declare class Capi implements CapiInstance {
    options: CapiOptions;
    defaultOptions: CapiOptions;
    constructor(options: CapiOptions);
    request(data: RequestData, opts?: RequestOptions, isV3?: boolean): Promise<any>;
}
//# sourceMappingURL=index.d.ts.map