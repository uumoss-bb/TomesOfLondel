/// <reference types="node" />
import { Method } from 'got';
import { CapiOptions } from './index';
export interface Payload {
    Region?: string;
    SecretId?: string;
    Timestamp?: number | string;
    Nonce?: number;
    [propName: string]: any;
}
export interface HostParams {
    serviceType: string;
    region: string;
    host: string | undefined;
    baseHost: string | undefined;
    path?: string;
    protocol?: string;
}
export interface TencentSignResult {
    url: string;
    payload: Payload;
    host: string;
    authorization: string;
    timestamp: string | string[] | undefined;
}
export interface TencentSignResultV1 {
    url: string;
    method: Method;
    payload: Payload;
}
export declare function getHost({ host, serviceType, region, baseHost }: HostParams, isV1?: boolean): string;
export declare function getUrl(opts: HostParams, isV1?: boolean): string;
export declare function sign(str: string, secretKey: Buffer, algorithm?: string): Buffer;
/**
 * generate tencent cloud sign result
 *
 * @param {Payload} payload
 * @param {CapiOptions} options
 * @returns {TencentSignResult}
 */
export declare function tencentSign(payload: Payload, options: CapiOptions): TencentSignResult;
/**
 * version1: generate tencent cloud sign result
 *
 * @param {Payload} payload
 * @param {CapiOptions} options
 * @returns {TencentSignResultV1}
 */
export declare function tencentSignV1(payload: Payload, options: CapiOptions): TencentSignResultV1;
//# sourceMappingURL=utils.d.ts.map